// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebScraper.Data;

namespace WebScraper.Data.Migrations
{
    [DbContext(typeof(ProductWatcherContext))]
    [Migration("20200919171807_InitialDataSeed")]
    partial class InitialDataSeed
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebScraper.Data.Models.Price", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AdditionalInformation")
                        .HasColumnType("nvarchar(1024)")
                        .HasMaxLength(1024);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("DicountPrice")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<double?>("DiscountPercentage")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("PriceValue")
                        .HasColumnName("Price")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Prices");
                });

            modelBuilder.Entity("WebScraper.Data.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Scheduler")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SiteId")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("SiteId");

                    b.HasIndex("Url", "IsDeleted")
                        .IsUnique()
                        .HasFilter("[IsDeleted] = 0");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsDeleted = false,
                            Scheduler = "[\"0 */30 * ? * *\"]",
                            SiteId = 1,
                            Url = "https://aliexpress.ru/item/4000561177801.html?spm=a2g0o.productlist.0.0.4c866c27X06Ss3&algo_pvid=e3004186-674b-47b9-9bfe-bde68786bf6c&algo_expid=e3004186-674b-47b9-9bfe-bde68786bf6c-1&btsid=0b8b15ea15903376264785085ed804&ws_ab_test=searchweb0_0,searchweb201602_,searchweb201603_"
                        });
                });

            modelBuilder.Entity("WebScraper.Data.Models.Site", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BaseUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("SettingsId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SettingsId");

                    b.ToTable("Sites");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BaseUrl = "https://aliexpress.ru/",
                            Name = "AliExpress",
                            SettingsId = 1
                        });
                });

            modelBuilder.Entity("WebScraper.Data.Models.SiteSettings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("AutoGenerateSchedule")
                        .HasColumnType("bit");

                    b.Property<string>("CheckInterval")
                        .IsRequired()
                        .HasColumnType("nvarchar(48)");

                    b.Property<string>("MinCheckInterval")
                        .IsRequired()
                        .HasColumnType("nvarchar(48)");

                    b.Property<bool>("UseSeleniumService")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("SiteSettings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AutoGenerateSchedule = false,
                            CheckInterval = "00:01:00",
                            MinCheckInterval = "00:01:00",
                            UseSeleniumService = true
                        });
                });

            modelBuilder.Entity("WebScraper.Data.Models.Price", b =>
                {
                    b.HasOne("WebScraper.Data.Models.Product", "Product")
                        .WithMany("Prices")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebScraper.Data.Models.Product", b =>
                {
                    b.HasOne("WebScraper.Data.Models.Site", "Site")
                        .WithMany("Products")
                        .HasForeignKey("SiteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebScraper.Data.Models.Site", b =>
                {
                    b.HasOne("WebScraper.Data.Models.SiteSettings", "Settings")
                        .WithMany()
                        .HasForeignKey("SettingsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
